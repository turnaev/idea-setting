<templateSet group="Go">
  <template name="imp" value="import (&#10; &quot;$END$&quot;&#10;)&#10;" description="Import declaration" toReformat="true" toShortenFQNames="true" />
  <template name="con" value="const $NAME$ $TYPE$ = $VALUE$" description="Constant declaration" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="TYPE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE" expression="complete()" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="for" value="for $VAR0$; $VAR1$; $VAR2$ {&#10; $END$&#10;}" description="For loop" toReformat="true" toShortenFQNames="true">
    <variable name="VAR0" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
  </template>
  <template name="xml" value="xml:&quot;$FIELD_NAME$&quot;" description="xml:&quot;&quot;" toReformat="true" toShortenFQNames="true">
    <variable name="FIELD_NAME" expression="snakeCase(fieldName())" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="json" value="json:&quot;$FIELD_NAME$&quot;" description="json:&quot;&quot;" toReformat="true" toShortenFQNames="true">
    <variable name="FIELD_NAME" expression="snakeCase(fieldName())" defaultValue="" alwaysStopAt="true" />
  </template>
</templateSet>